##############################
# OAuth2-protected subdomain

# Custom log format that logs with hostname
log_format include_hostname '$remote_addr - $remote_user [$time_local] '
                '"$host" "$request" $status $body_bytes_sent '
                '"$http_referer" "$http_user_agent"';

proxy_cache_path on keys_zone=app_token_responses:1m max_size=2m;

upstream my_app_api {
    server  localhost:8080;
}
upstream seacat_public_api {
    server  localhost:3081;
}
upstream seacat_private_api {
    server  localhost:8900;
}

server {
    listen 443;
    listen [::]:443;
    server_name app.test.loc;
    server_tokens off;
    access_log /log/nginx-access.log include_hostname;
    error_log /log/nginx-error.log include_hostname;

    location / {
        auth_request    /_oauth2_introspect;
        root            /app;
        index           index.html;
    }

    location /api/openidconnect {
        rewrite               ^/api/(.*) /$1 break;
        proxy_pass            http://auth.localhost/;
    }

    location = /_oauth2_introspect {
        internal;
        proxy_method          POST;
        proxy_set_body        "$http_authorization";
        proxy_set_header      X-Request-URI "$request_uri";
        proxy_pass            http://seacat_private_api/nginx/openidconnect/introspect;
        proxy_cache           app_token_responses;
        proxy_cache_key       $http_authorization;
        proxy_cache_lock      on;
        proxy_cache_valid     200 10s;
        proxy_ignore_headers  Cache-Control Expires Set-Cookie;
    }

    error_page 401 403 https://auth.test.loc/api/openidconnect/authorize?response_type=code&scope=openid&client_id=signin&redirect_uri=$request_uri;
}


##################
# Auth subdomain

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name auth.test.loc;
    error_log /log/nginx.error.log include_hostname;
    access_log /log/nginx.access.log include_hostname;

    # Specify path to SSL certificate files
    ssl_certificate /etc/nginx/conf.d/cert.pem;
    ssl_certificate_key /etc/nginx/conf.d/key.pem;

    location / {
        # Redirect to default endpoint
        return 301 /auth;
    }


    #####################
    # SeaCat Auth WebUI

    location /auth {
        root  /seacat-auth-webui;
        index index.html;
    }

    location /auth/api/seacat-auth {
        # SCA webUI uses only the public part of the API, no authentication required
        rewrite ^/auth/api/seacat-auth/(.*) /$1 break;
        proxy_pass http://seacat_public_api;
    }

    location /auth/api/openidconnect {
        rewrite ^/auth/api/(.*) /$1 break;
        proxy_pass http://seacat_public_api;
    }


    ################
    # SeaCat WebUI
    location /seacat {
        root  /seacat-webui;
        index index.html;
    }

    location /seacat/api/seacat-auth {
        auth_request /_oauth2_introspect;
        auth_request_set   $authorization $upstream_http_authorization;
        proxy_set_header   Authorization $authorization;
        rewrite ^/seacat/api/seacat-auth/(.*) /$1 break;
        proxy_pass http://seacat_private_api;
    }

    location /seacat/api/seacat-auth/public {
        rewrite ^/seacat/api/seacat-auth/(.*) /$1 break;
        proxy_pass http://seacat_public_api;
    }

    location /seacat/api/openidconnect {
        rewrite ^/seacat/api/(.*) /$1 break;
        proxy_pass http://seacat_public_api;
    }

    location = /_oauth2_introspect {
        internal;
        proxy_method          POST;
        proxy_set_body        "$http_authorization";
        proxy_set_header      X-Request-URI "$request_uri";
        proxy_pass            http://seacat_private_api/nginx/openidconnect/introspect;
        proxy_cache           app_token_responses;
        proxy_cache_key       $http_authorization;
        proxy_cache_lock      on;
        proxy_cache_valid     200 10s;
        proxy_ignore_headers  Cache-Control Expires Set-Cookie;
    }

    error_page 401 403 /auth/api/openidconnect/authorize?response_type=code&scope=openid%20cookie&client_id=signin&prompt=login&redirect_uri=$request_uri;
}
