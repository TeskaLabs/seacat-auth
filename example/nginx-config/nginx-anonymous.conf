#####################################
# INTROSPECTION WITH ANONYMOUS ACCESS

# Define introspection cache
proxy_cache_path on keys_zone=my_app_auth_responses:1m max_size=2m;

# Define upstreams
upstream my_app_api {...}
upstream auth_api {...}

server {
	listen 443 ssl;
	listen [::]:443 ssl;
	server_name _;
	error_log /log/nginx.error.log;
	access_log /log/nginx.access.log;

	# Specify path to SSL certificate files
	ssl_certificate /etc/nginx/conf.d/cert.pem;
	ssl_certificate_key /etc/nginx/conf.d/key.pem;

	# 403 redirects to SeaCat Auth home screen
	error_page 403 /auth?error=access_denied&what=$request_uri;

	######################################
	# EXAMPLE: Cookie-protected location
	#   with anonymous access support
	location /my_application {
		auth_request        /_cookie_introspect_anonymous;

		# Set Authorization header
		auth_request_set    $authorization $upstream_http_authorization;
		proxy_set_header    Authorization $authorization;

		# Remove SeaCat Auth cookie
		auth_request_set    $cookie $upstream_http_cookie;
		proxy_set_header    Cookie $cookie;

		# Unauthenticated user receives a Set-Cookie from the auth request
		# Add the Set-Cookie header to response
		auth_request_set   $set_cookie $upstream_http_set_cookie;
		add_header	Set-Cookie $set_cookie;

		rewrite             ^/my_application/(.*) /$1 break;
		proxy_pass          http://my_app_api;

		error_page 401      /auth/api/openidconnect/authorize?response_type=code&scope=openid%20cookie&client_id=my-application&redirect_uri=$request_uri;
	}

	# Introspection endpoint for my_application
	location = /_cookie_introspect_anonymous {
        internal;
        proxy_method          POST;
        proxy_set_body        "$http_authorization";
        proxy_set_header      X-Request-Uri "$scheme://$host$request_uri";
        proxy_ignore_headers  Cache-Control Expires Set-Cookie;

		# Call the cookie introspection with a credential ID in the `cid` parameter
		# Anonymous sessions will have this ID in the `subject` field
		proxy_pass            http://auth_api/cookie/nginx/anonymous?client_id=my-application&cid=mongodb:default:abc123def546;

		# Successful introspection responses should be cached
		proxy_cache           my_app_auth_responses;
		proxy_cache_key       $http_authorization;
		proxy_cache_lock      on;
		proxy_cache_valid     200 30s;
	}

    # SeaCat Auth WebUI
	location /auth {
		alias  /seacat-auth-webui;
		index index.html;
	}

    # SeaCat Auth Public API
	location /auth/api/seacat-auth {
	    # SCA webUI uses only the public part of the API, no authentication required
		rewrite ^/auth/api/seacat-auth/(.*) /$1 break;
		proxy_pass http://auth_api;
	}

    # SeaCat Auth OpenIDConnect API
	location /auth/api/openidconnect {
		rewrite ^/auth/api/(.*) /$1 break;
		proxy_pass http://auth_api;
	}
}


# Redirect HTTP to HTTPS
server {
	listen 80;
	listen [::]:80;
	server_name _;
	return 301 https://$host$request_uri;
}
