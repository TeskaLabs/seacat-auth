#####################################
# OAUTH INTROSPECTION FOR WEBSOCKET

# Define introspection cache
proxy_cache_path on keys_zone=oauth_responses:1m max_size=2m;

server {
    location = /_oauth_introspect {
		internal;
		proxy_method          POST;
		proxy_set_body        "$http_authorization";
		proxy_pass            http://seacat_private_api/nginx/openidconnect/introspect?client_id=my-app;
		proxy_ignore_headers  Cache-Control Expires Set-Cookie;

		proxy_cache           oauth_responses;
		# Concatenate the 'Authorization' and 'Sec-WebSocket-Protocol' headers to create the cache key
		proxy_cache_key       "$http_authorization $http_sec_websocket_protocol";
		proxy_cache_lock      on;
		proxy_cache_valid     200 30s;
	}

	location /my-app {
        rewrite ^/my-app/(.*) /$1 break;
        proxy_pass http://my_app_api;

        auth_request       /_seacat_admin_introspect;

        # Let the auth request rewrite the "Authorization" and the "Cookie"
        # headers to prevent auth token leaks
        auth_request_set   $authorization $upstream_http_authorization;
        proxy_set_header   Authorization $authorization;
        auth_request_set   $cookie $upstream_http_cookie;
        proxy_set_header   Cookie $cookie;

        # Error 401 will result in a redirect to OAuth Authorize endpoint
        error_page 401     /auth/api/openidconnect/authorize?client_id=my-app&response_type=code&scope=openid&redirect_uri=https://localhost/my-app/;
    }
}
