#############################################
# MINIMAL PROXY CONFIGURATION FOR LOCALHOST
# (insecure HTTP)
#
# Access the web UI by navigating to
#         http://localhost
# in your browser.
#
# NOTE: Some advanced SeaCat Auth features (e.g. WebAuthn or external login) will not work with this configuration.
# For full experience it is recommended to run the site on a proper domain with HTTPS.
# See the "nginx-https.conf.example" configuration for details.
#

# Define upstreams
upstream my_app_api {
    server  localhost:8080;
}
upstream seacat_public_api {
    server  localhost:3081;
}
upstream seacat_private_api {
    server  localhost:8900;
}

server {
    listen 80;
    listen [::]:80;
	server_name _;
	error_log /log/nginx.error.log;
	access_log /log/nginx.access.log;

    # Increase buffer size to allow ID tokens in Authorization headers
	proxy_buffer_size     128k;
	proxy_buffers         4 256k;
	proxy_busy_buffers_size  256k;

    location / {
        return 301 /seacat;
    }


    ######################################
    # EXAMPLE: Cookie-protected location
	location /cookie_protected {
	    auth_request        /_cookie_introspect;
	    # Set Authorization header
	    auth_request_set    $authorization $upstream_http_authorization;
        proxy_set_header    Authorization $authorization;
        # Remove SeaCat Auth cookie
		auth_request_set    $cookie $upstream_http_cookie;
		proxy_set_header    Cookie $cookie;
        rewrite             ^/protected/(.*) /$1 break;
	    proxy_pass          http://localhost:8080;
	}

	# EXAMPLE: OAuth2-protected location
	location /oauth2_protected {
	    auth_request        /_oauth2_introspect;
	    # Set Authorization header
	    auth_request_set    $authorization $upstream_http_authorization;
        proxy_set_header    Authorization $authorization;
        # Remove SeaCat Auth cookie
		auth_request_set    $cookie $upstream_http_cookie;
		proxy_set_header    Cookie $cookie;
        rewrite             ^/protected/(.*) /$1 break;
	    proxy_pass          http://localhost:8080;
	}


    #############################
    # SeaCat Auth WebUI section

    # WebUI
	location /auth {
		alias  /seacat-auth-webui;
		index index.html;
	}

    # Public API
	location /auth/api/seacat-auth {
	    # SCA web UI uses only the public part of the API, no authentication required
		rewrite ^/auth/api/seacat-auth/(.*) /$1 break;
		proxy_pass http://seacat_public_api;
	}

    # OpenIDConnect
	location /auth/api/openidconnect {
		rewrite ^/auth/api/(.*) /$1 break;
		proxy_pass http://seacat_public_api;
	}


    ########################
    # SeaCat WebUI section
	location /seacat {
		alias  /seacat-webui;
		index index.html;
	}

    # Seacat API
	location /seacat/api/seacat-auth {
		# Exchange Access token for ID token
		auth_request       /_oauth2_introspect;
		auth_request_set   $authorization $upstream_http_authorization;
		proxy_set_header   Authorization $authorization;
		rewrite ^/seacat/api/seacat-auth/(.*) /$1 break;
		proxy_pass http://seacat_private_api;
	}

	location /seacat/api/seacat-auth/public {
        rewrite ^/seacat/api/seacat-auth/(.*) /$1 break;
        proxy_pass http://seacat_public_api;
    }

    # OpenIDConnect
	location /seacat/api/openidconnect {
		rewrite ^/seacat/api/(.*) /$1 break;
		proxy_pass http://seacat_public_api;
	}


    ###########################
    # Introspection endpoints
	location = /_cookie_introspect {
		internal;
		proxy_method          POST;
		proxy_set_body        "$http_authorization";
		proxy_pass            http://seacat_private_api/nginx/cookie?client_id=my-app-cookie;
		proxy_ignore_headers  Cache-Control Expires Set-Cookie;
	}

	location = /_oauth2_introspect {
		internal;
		proxy_method          POST;
		proxy_set_body        "$http_authorization";
		proxy_set_header      X-Request-URI "$request_uri";
		proxy_pass            http://seacat_private_api/nginx/openidconnect/introspect?client_id=my-app-oauth;
		proxy_ignore_headers  Cache-Control Expires Set-Cookie;
	}

	# 401 and 403 redirects to /openidconnect/authorize which will require authentication via Seacat Auth login page
	# Successful login redirects back to the original requested URI
	error_page 401 403 /auth/api/openidconnect/authorize?response_type=code&scope=openid%20cookie&client_id=signin&prompt=login&redirect_uri=$request_uri;
}
