proxy_cache_path on keys_zone=token_responses:1m max_size=2m;
server {
	
	listen 80;
	listen [::]:80;
	server_name content.test.localhost;
	server_tokens off;
	access_log /log/nginx-access.log;
	error_log /log/nginx-error.log;
	
	location / {
		root /home/adam/Workspace/Teskalabs/asab-webui-demo/dist;
		index index.html;
	}
	
	location /api/openidconnect {
		rewrite               ^/api/(.*) /$1 break;
		proxy_pass            http://auth.localhost/;
	}

	location ~ ^/api/protected/([a-zA-Z0-9][^/]*)/.* {
		auth_request          /_oauth2_introspect;
		set                   $tenant $1;
		rewrite               ^/api/protected/(.*) /$1 break;
		proxy_pass            http://localhost:8080;

		auth_request_set      $credentials $upstream_http_x_credentials;
		proxy_set_header      X-Credentials $credentials;
		auth_request_set      $tenants $upstream_http_x_tenants;
		proxy_set_header      X-Tenants $tenants;
		auth_request_set      $roles $upstream_http_x_roles;
		proxy_set_header      X-Roles $roles;
	}

	location = /_oauth2_introspect {
		internal;
		proxy_method          POST;
		proxy_set_body        "$http_authorization";
		proxy_set_header      X-Request-URI "$request_uri";
		proxy_set_header      X-Tenant "$tenant";
		# proxy_pass            http://localhost:8081/openidconnect/introspect/nginx?&add=credentials&add=tenants&add=roles; # for tenantless configuration
		proxy_pass            http://localhost:8081/openidconnect/introspect/nginx?verify=tenant&add=credentials&add=tenants&add=roles;
		proxy_cache           token_responses;     # Enable caching
		# proxy_cache_key       $http_authorization;  # for tenantless configuration
		proxy_cache_key       "$tenant $http_authorization"; # Cache for each access token and tenant
		proxy_cache_lock      on;                  # Duplicate tokens must wait
		proxy_cache_valid     200 10s;             # How long to use each response
		proxy_ignore_headers  Cache-Control Expires Set-Cookie;
	}
	

	# 401 and 403 forwards to a login page provided by a SeaCat Auth
	error_page 401 http://auth.test.localhost/api/openidconnect/authorize?response_type=code&scope=openid%20cookie&client_id=signin&redirect_uri=http://content2.test.localhost;
	error_page 403 http://auth.test.localhost/api/openidconnect/authorize?response_type=code&scope=openid%20cookie&client_id=signin&redirect_uri=http://content2.test.localhost;
}

server {
	listen 80;
	listen [::]:80;
	server_name content2.test.localhost;
	server_tokens off;
	access_log /log/nginx-access.log;
	error_log /log/nginx-error.log;

	location / {
		auth_request          /_cookie_introspect;
		proxy_set_header      Host $host;
		proxy_pass            http://localhost:8080/;
		
		auth_request_set      $credentials $upstream_http_x_credentials;
		proxy_set_header      X-Credentials $credentials;
		auth_request_set      $tenants $upstream_http_x_tenants;
		proxy_set_header      X-Tenants $tenants;
		auth_request_set      $roles $upstream_http_x_roles;
		proxy_set_header      X-Roles $roles;
	}

	location = /_cookie_introspect {
		internal;
		proxy_method          POST;
		proxy_set_body        "$http_authorization";
		proxy_pass            http://localhost:8081/cookie/nginx?add=credentials&add=tenants&add=roles;

	}

	error_page 401 http://auth.test.localhost/api/openidconnect/authorize?response_type=cookie&scope=openid%20cookie&client_id=signin&redirect_uri=http://content2.test.localhost;
	error_page 403 http://auth.test.localhost/api/openidconnect/authorize?response_type=cookie&scope=openid%20cookie&client_id=signin&redirect_uri=http://content2.test.localhost;
}

server {
	listen 80;
	listen [::]:80;
	server_name auth.test.localhost;
	server_tokens off;
	access_log /log/nginx-access.log;
	error_log /log/nginx-error.log;
	
	location / {
		root /home/adam/Workspace/Teskalabs/seacat-auth-webui/dist;
		index index.html;
	}

	location /api {
		rewrite               ^/api/(.*) /$1 break;
		proxy_set_header      Host $host;
		proxy_pass            http://localhost:8081/;
	}

	location = /_cookie_introspect {
		internal;
		proxy_method          POST;
		proxy_set_body        "$http_authorization";
		proxy_pass            http://localhost:8081/cookie/nginx;
	}
}