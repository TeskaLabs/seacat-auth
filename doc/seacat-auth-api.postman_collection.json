{
	"info": {
		"_postman_id": "cb7bdae1-6b62-43d3-afd3-a7191cdfc3a0",
		"name": "SeaCat Auth",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Sessions",
			"item": [
				{
					"name": "List sessions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/session",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"session"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a session detail",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/session/:session_id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"session",
								":session_id"
							],
							"variable": [
								{
									"key": "session_id",
									"value": "5e4880e16254612d40e5b233",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a session",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/session/:session_id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"session",
								":session_id"
							],
							"variable": [
								{
									"key": "session_id",
									"value": "5e3b20a52d9fdbc6e2621e57",
									"type": "string"
								}
							]
						},
						"description": "*Requires `authz:superuser` access*"
					},
					"response": []
				},
				{
					"name": "Delete all sessions of a specified credentials",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/sessions/:credentials_id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"sessions",
								":credentials_id"
							],
							"variable": [
								{
									"key": "credentials_id",
									"value": ""
								}
							]
						},
						"description": "*Requires `authz:superuser` access*"
					},
					"response": []
				},
				{
					"name": "Delete all sessions",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/sessions",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"sessions"
							]
						},
						"description": "*Requires `authz:superuser` access*"
					},
					"response": []
				}
			],
			"description": "**Sessions are part of the private API, not accessible over Internet.**",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Credentials",
			"item": [
				{
					"name": "Public",
					"item": [
						{
							"name": "Create a ticket for password reset",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ident\": \"mrs.johnson@example.xyz\"\n}"
								},
								"url": {
									"raw": "{{BASE_URL}}/public/lost-password",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"public",
										"lost-password"
									]
								},
								"description": "Changes user password. Requires user-authorized session.\n\n**Public API**"
							},
							"response": []
						},
						{
							"name": "Get registration ticket",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BASE_URL}}/public/register",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"public",
										"register"
									]
								},
								"description": "**Public API**"
							},
							"response": []
						},
						{
							"name": "Get invitation ticket",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{BASE_URL}}/public/invitation/:register_token",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"public",
										"invitation",
										":register_token"
									],
									"variable": [
										{
											"key": "register_token",
											"value": "abc123def456ghi789",
											"type": "string"
										}
									]
								},
								"description": "**Public API**"
							},
							"response": []
						},
						{
							"name": "Register credentials",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"email\":\"testAA\",\n\t\"password\":\"testAA\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE_URL}}/public/register/:register_token",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"public",
										"register",
										":register_token"
									],
									"query": [
										{
											"key": "existing",
											"value": "1",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "register_token",
											"value": "abc123def456ghi789",
											"type": "string"
										}
									]
								},
								"description": "A public API for a creation of the credentials.\nThis is endpoint for user requests for credentials, \"Create credentials\" is call for priviledget admins.\n\n**Public API**"
							},
							"response": []
						},
						{
							"name": "Assign Tenant",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{BASE_URL}}/public/assign_tenant/:register_token",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"public",
										"assign_tenant",
										":register_token"
									],
									"query": [
										{
											"key": "existing",
											"value": "1",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "register_token",
											"value": "abc123def456ghi789",
											"type": "string"
										}
									]
								},
								"description": "A public API for a creation of the credentials.\nThis is endpoint for user requests for credentials, \"Create credentials\" is call for priviledget admins.\n\n**Public API**"
							},
							"response": []
						},
						{
							"name": "Change password",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldpassword\": \"badpassword\",\n    \"newpassword\": \"betterpassword\"\n}"
								},
								"url": {
									"raw": "{{BASE_URL}}/public/password-change",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"public",
										"password-change"
									]
								},
								"description": "Changes user password. Requires user-authorized session.\n\n**Public API**"
							},
							"response": []
						},
						{
							"name": "Reset password",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"newpassword\": \"betterpassword\"\n}"
								},
								"url": {
									"raw": "{{BASE_URL}}/public/password-reset?x=abc123def456ghi789",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"public",
										"password-reset"
									],
									"query": [
										{
											"key": "x",
											"value": "abc123def456ghi789"
										}
									]
								},
								"description": "Resets user password. Requires password reset code (query parameter `x`).\nUsed in lost password recovery and password creation for new users.\n\n**Public API**"
							},
							"response": []
						},
						{
							"name": "Deactivate TOTP",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{BASE_URL}}/public/unset-totp",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"public",
										"unset-totp"
									]
								},
								"description": "Deactivate time-based one-time password (TOTP) for current credentials."
							},
							"response": []
						},
						{
							"name": "Generate TOTP secret",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{BASE_URL}}/public/unset-totp",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"public",
										"unset-totp"
									]
								},
								"description": "Generate TOTP secret for current credentials. This should be saved in the user's OTP mobile app."
							},
							"response": []
						},
						{
							"name": "Activate TOTP",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{BASE_URL}}/public/set-totp",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"public",
										"set-totp"
									]
								},
								"description": "Activate time-based one-time password (TOTP) for current credentials."
							},
							"response": []
						}
					]
				},
				{
					"name": "Providers",
					"item": [
						{
							"name": "Get a dictionary of providers",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{BASE_URL}}/provider",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"provider"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get a detail of credentials",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/credentials/:credentials_id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"credentials",
								":credentials_id"
							],
							"variable": [
								{
									"key": "credentials_id",
									"value": "mongodb:default:abc123def456ghi789",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Locate credentials ids by ident",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/locate?ident=testuser&stop_at_first=true",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"locate"
							],
							"query": [
								{
									"key": "ident",
									"value": "testuser"
								},
								{
									"key": "stop_at_first",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a credentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"testuser\",\n    \"email\": \"mrs.johnson@example.xyz\",\n    \"passwordlink\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/credentials/:provider",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"credentials",
								":provider"
							],
							"variable": [
								{
									"key": "provider",
									"value": "ext",
									"type": "string",
									"description": "Id of the credentials provider"
								}
							]
						},
						"description": "This is a private API endpoint for priviledged users (admins) that creates credentials.\nIf you look for user endpoint (public API), see \"Registration\"."
					},
					"response": []
				},
				{
					"name": "Update a credentials",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"mrs.johnson@example.xyz\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/credentials/:credentials_id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"credentials",
								":credentials_id"
							],
							"variable": [
								{
									"key": "credentials_id",
									"value": "dict:temp:abc123def456ghi789",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get usernames from IDs",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"mongodb:default:abc123def456ghi789\",\n    \"htpasswd:htpasswd:patrick\"\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/usernames",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"usernames"
							]
						}
					},
					"response": []
				},
				{
					"name": "Suspend credentials",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer abc123def456ghi789",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"suspended\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/credentials/:credentials_id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"credentials",
								":credentials_id"
							],
							"variable": [
								{
									"key": "credentials_id",
									"value": "mongodb:default:abc123def456ghi789",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Unsuspend credentials",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer abc123def456ghi789"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"suspended\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/credentials/:credentials_id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"credentials",
								":credentials_id"
							],
							"variable": [
								{
									"key": "credentials_id",
									"value": "mongodb:default:abc123def456ghi789",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete credentials",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/credentials/:credentials_id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"credentials",
								":credentials_id"
							],
							"variable": [
								{
									"key": "credentials_id",
									"value": "dict:temp:abc123def456ghi789",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List credentials",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/credentials",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"credentials"
							],
							"query": [
								{
									"key": "p",
									"value": "1",
									"description": "Page number",
									"disabled": true
								},
								{
									"key": "i",
									"value": "10",
									"description": "Results per page (default is 10)",
									"disabled": true
								},
								{
									"key": "m",
									"value": "default",
									"description": "Filter mode (\"default\", \"role\" or\"tenant\")",
									"disabled": true
								},
								{
									"key": "f",
									"value": null,
									"description": "Filter string (username substring, role id or tenant name)",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a ticket for password reset",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"credentials_id\": \"dict:temp:abc123def456ghi789\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/password",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"password"
							]
						},
						"description": "Changes user password. Requires user-authorized session.\n\n**Public API**"
					},
					"response": []
				},
				{
					"name": "Create invite",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/:tenant/register/invite",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								":tenant",
								"register",
								"invite"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "ewtest14",
									"type": "string"
								}
							]
						},
						"description": "**Public API**"
					},
					"response": []
				}
			]
		},
		{
			"name": "OpenID Connect",
			"item": [
				{
					"name": "Authorization endpoint",
					"item": [
						{
							"name": "Authorize",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BASE_URL}}/openidconnect/authorize?response_type=code&scope=openid cookie&client_id=signin&redirect_uri=/",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"openidconnect",
										"authorize"
									],
									"query": [
										{
											"key": "response_type",
											"value": "code"
										},
										{
											"key": "scope",
											"value": "openid cookie"
										},
										{
											"key": "client_id",
											"value": "signin"
										},
										{
											"key": "redirect_uri",
											"value": "/"
										},
										{
											"key": "prompt",
											"value": null,
											"description": "\"none\", \"login\" or \"select_account\"",
											"disabled": true
										}
									]
								},
								"description": "https://openid.net/specs/openid-connect-core-1_0.html#HybridAuthorizationEndpoint"
							},
							"response": []
						},
						{
							"name": "Authorize (Form action)",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{BASE_URL}}/openidconnect/authorize",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"openidconnect",
										"authorize"
									]
								},
								"description": "This is not a standard API call."
							},
							"response": []
						}
					]
				},
				{
					"name": "Token endpoint",
					"item": [
						{
							"name": "Token request",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "text"
										},
										{
											"key": "code",
											"value": "abc123def456ghi789",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{BASE_URL}}/openidconnect/token",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"openidconnect",
										"token"
									]
								},
								"description": "Non-standard extension that allows smooth NGINX integration using auth_request module."
							},
							"response": []
						},
						{
							"name": "Token revoke",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token_type_hint\": \"access_token\",\n    \"token\": \"abc123def456ghi789\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE_URL}}/openidconnect/token/revoke",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"openidconnect",
										"token",
										"revoke"
									]
								}
							},
							"response": []
						},
						{
							"name": "Token refresh",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"refresh_token\": \"abc123def456ghi789\",\n    \"grant_type\": \"authorization_code\",\n    \"client_id\": \"signin\",\n    \"client_secret\": \"secret123456\",\n    \"scope\": \"openid\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE_URL}}/openidconnect/token/refresh",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"openidconnect",
										"token",
										"refresh"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Token Introspection endpoint",
					"item": [
						{
							"name": "Introspect",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{BASE_URL}}/openidconnect/introspect",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"openidconnect",
										"introspect"
									]
								},
								"description": "This is not a standard API call."
							},
							"response": []
						},
						{
							"name": "Introspect (NGINX)",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{BASE_URL}}/openidconnect/introspect/nginx",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"openidconnect",
										"introspect",
										"nginx"
									]
								},
								"description": "Non-standard extension that allows smooth NGINX integration using auth_request module."
							},
							"response": []
						}
					]
				},
				{
					"name": "UserInfo endpoint",
					"item": [
						{
							"name": "User Info",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer abc123def456ghi789",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BASE_URL}}/openidconnect/userinfo",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"openidconnect",
										"userinfo"
									]
								},
								"description": "Return the info about the current user based on `Authorization` header."
							},
							"response": [
								{
									"name": "User Info",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer abc123def456ghi789",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{BASE_URL}}/openidconnect/userinfo",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"openidconnect",
												"userinfo"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Python/3.7 aiohttp/3.4.4 asab/devel"
										},
										{
											"key": "Content-Length",
											"value": "79"
										},
										{
											"key": "Date",
											"value": "Tue, 17 Mar 2020 13:54:27 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"sub\": \"mongodb:default:abc123def456ghi789\",\n    \"preferred_username\": \"foobar\"\n}"
								}
							]
						},
						{
							"name": "User Info (with tenant information)",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer abc123def456ghi789",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{BASE_URL}}/openidconnect/userinfo?tenant=my-tenant",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"openidconnect",
										"userinfo"
									],
									"query": [
										{
											"key": "tenant",
											"value": "my-tenant"
										}
									]
								}
							},
							"response": [
								{
									"name": "User Info",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer abc123def456ghi789",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{BASE_URL}}/openidconnect/userinfo",
											"host": [
												"{{BASE_URL}}"
											],
											"path": [
												"openidconnect",
												"userinfo"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Server",
											"value": "Python/3.7 aiohttp/3.4.4 asab/devel"
										},
										{
											"key": "Content-Length",
											"value": "79"
										},
										{
											"key": "Date",
											"value": "Tue, 17 Mar 2020 13:54:27 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"sub\": \"mongodb:default:abc123def456ghi789\",\n    \"preferred_username\": \"foobar\"\n}"
								}
							]
						}
					],
					"description": "OpenID Connect Core 1.0 chapter 5.3. UserInfo Endpoint\n\nThe UserInfo Endpoint is an OAuth 2.0 Protected Resource that returns Claims about the authenticated End-User. To obtain the requested Claims about the End-User, the Client makes a request to the UserInfo Endpoint using an Access Token obtained through OpenID Connect Authentication. These Claims are normally represented by a JSON object that contains a collection of name and value pairs for the Claims.\n\nhttps://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Session logout",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer abc123def456ghi789",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/openidconnect/logout",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"openidconnect",
								"logout"
							]
						},
						"description": "Logout the current session by CSI or access token"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Tenants",
			"item": [
				{
					"name": "List tenants",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/tenant",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"tenant"
							]
						},
						"description": "List all available tenants."
					},
					"response": [
						{
							"name": "List tenants",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BASE_URL}}/tenant",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"tenant"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Python/3.6 aiohttp/3.5.4 asab/devel"
								},
								{
									"key": "Content-Length",
									"value": "115"
								},
								{
									"key": "Date",
									"value": "Wed, 18 Mar 2020 12:51:00 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"_id\": \"MyTenant\",\n        \"_v\": 1,\n        \"_c\": \"2020-03-18T12:50:52.708000\",\n        \"_m\": \"2020-03-18T12:50:52.708000\",\n        \"active\": 1\n    }\n]"
						}
					]
				},
				{
					"name": "Create tenant",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"id\": \"MyTenant\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/tenant",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"tenant"
							]
						},
						"description": "Create a new tenant and insert it to the database."
					},
					"response": [
						{
							"name": "Create tenant - tenant already exists",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "MyTenant"
								},
								"url": {
									"raw": "{{BASE_URL}}/tenant",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"tenant"
									]
								}
							},
							"status": "400",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Python/3.6 aiohttp/3.5.4 asab/devel"
								},
								{
									"key": "Content-Length",
									"value": "27"
								},
								{
									"key": "Date",
									"value": "Wed, 18 Mar 2020 11:57:12 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"TENANT-EXISTS\"\n}"
						},
						{
							"name": "Create tenant - success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "MyTenant"
								},
								"url": {
									"raw": "{{BASE_URL}}/tenant",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"tenant"
									]
								}
							},
							"status": "201",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Python/3.6 aiohttp/3.5.4 asab/devel"
								},
								{
									"key": "Content-Length",
									"value": "16"
								},
								{
									"key": "Date",
									"value": "Wed, 18 Mar 2020 11:56:50 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"OK\"\n}"
						}
					]
				},
				{
					"name": "Propose tenant name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/public/tenant_propose",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"public",
								"tenant_propose"
							]
						}
					},
					"response": [
						{
							"name": "List tenants",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BASE_URL}}/tenant",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"tenant"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Python/3.6 aiohttp/3.5.4 asab/devel"
								},
								{
									"key": "Content-Length",
									"value": "115"
								},
								{
									"key": "Date",
									"value": "Wed, 18 Mar 2020 12:51:00 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"_id\": \"MyTenant\",\n        \"_v\": 1,\n        \"_c\": \"2020-03-18T12:50:52.708000\",\n        \"_m\": \"2020-03-18T12:50:52.708000\",\n        \"active\": 1\n    }\n]"
						}
					]
				},
				{
					"name": "Get tenant detail",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/tenant/:tenant_id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"tenant",
								":tenant_id"
							],
							"variable": [
								{
									"key": "tenant_id",
									"value": "my-tenant"
								}
							]
						},
						"description": "List all available tenants."
					},
					"response": [
						{
							"name": "List tenants",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BASE_URL}}/tenant",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"tenant"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Python/3.6 aiohttp/3.5.4 asab/devel"
								},
								{
									"key": "Content-Length",
									"value": "115"
								},
								{
									"key": "Date",
									"value": "Wed, 18 Mar 2020 12:51:00 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"_id\": \"MyTenant\",\n        \"_v\": 1,\n        \"_c\": \"2020-03-18T12:50:52.708000\",\n        \"_m\": \"2020-03-18T12:50:52.708000\",\n        \"active\": 1\n    }\n]"
						}
					]
				},
				{
					"name": "Delete tenant",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/tenant/:tenant_id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"tenant",
								":tenant_id"
							],
							"variable": [
								{
									"key": "tenant_id",
									"type": "string",
									"value": "MyTenant"
								}
							]
						},
						"description": "*Requires `authz:superuser` access*"
					},
					"response": [
						{
							"name": "Delete tenant - success",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "MyTenant"
								},
								"url": {
									"raw": "{{BASE_URL}}/tenant",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"tenant"
									]
								}
							},
							"status": "200",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Python/3.6 aiohttp/3.5.4 asab/devel"
								},
								{
									"key": "Content-Length",
									"value": "16"
								},
								{
									"key": "Date",
									"value": "Wed, 18 Mar 2020 11:59:43 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"OK\"\n}"
						},
						{
							"name": "Delete tenant - tenant does not exist",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "MyTenant"
								},
								"url": {
									"raw": "{{BASE_URL}}/tenant",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"tenant"
									]
								}
							},
							"status": "400",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Python/3.6 aiohttp/3.5.4 asab/devel"
								},
								{
									"key": "Content-Length",
									"value": "35"
								},
								{
									"key": "Date",
									"value": "Wed, 18 Mar 2020 12:00:09 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"result\": \"TENANT-DOES-NOT-EXIST\"\n}"
						}
					]
				},
				{
					"name": "List assigned tenants",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"credentials_id\": \"htpasswd:htpasswd:john_doe\",\n    \"tenant_id\": \"tenant1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/tenant_assign/:credentials_id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"tenant_assign",
								":credentials_id"
							],
							"variable": [
								{
									"key": "credentials_id",
									"value": "htpasswd:htpasswd:john_doe",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign credentials into a tenant",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tenants\": [\n        \"MyTenant\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/tenant_assign/:credentials_id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"tenant_assign",
								":credentials_id"
							],
							"variable": [
								{
									"key": "credentials_id",
									"value": "htpasswd:htpasswd:john_doe",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Unassign tenant",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"credentials_id\": \"htpasswd:htpasswd:john_doe\",\n    \"tenant_id\": \"tenant1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/tenant_assign/:credentials_id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"tenant_assign",
								":credentials_id"
							],
							"variable": [
								{
									"key": "credentials_id",
									"value": "htpasswd:default:john_doe",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Set value of a tenant data field",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"value\": \"Cindy Ownerson\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/tenant/:tenant_id/:field",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"tenant",
								":tenant_id",
								":field"
							],
							"variable": [
								{
									"key": "tenant_id",
									"value": "my-tenant"
								},
								{
									"key": "field",
									"value": "owner"
								}
							]
						},
						"description": "*Requires `authz:tenant:admin` resource.*\n\nSet a value of a field in tenant data. These fields can be read in tenant detail (`GET /tenant/{tenant_id}`)."
					},
					"response": []
				},
				{
					"name": "Delete data field from a tenant",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/tenant/:tenant_id/:field",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"tenant",
								":tenant_id",
								":field"
							],
							"variable": [
								{
									"key": "tenant_id",
									"value": "my-tenant"
								},
								{
									"key": "field",
									"value": "owner"
								}
							]
						},
						"description": "*Requires `authz:tenant:admin` resource.*\n\nRemove a field from tenant data."
					},
					"response": []
				}
			]
		},
		{
			"name": "Roles",
			"item": [
				{
					"name": "List roles",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/role/:tenant",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"role",
								":tenant"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "MyTenant"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get role detail",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/role/:tenant/:role_name",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"role",
								":tenant",
								":role_name"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "MyTenant"
								},
								{
									"key": "role_name",
									"value": "Editor"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a role",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/role/:tenant/:role",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"role",
								":tenant",
								":role"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "MyTenant"
								},
								{
									"key": "role",
									"value": "Editor"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete role",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/role/:tenant/:role",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"role",
								":tenant",
								":role"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "MyTenant"
								},
								{
									"key": "role",
									"value": "Editor"
								}
							]
						},
						"description": "*Requires `authz:tenant:admin` access*"
					},
					"response": []
				},
				{
					"name": "Set resources to a role",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"set\": [\n        \"booking:access\",\n        \"booking:create\",\n        \"booking:cancel\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/role/:tenant/:role",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"role",
								":tenant",
								":role"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "MyTenant"
								},
								{
									"key": "role",
									"value": "Editor"
								}
							]
						},
						"description": "*Requires `authz:tenant:admin` access*"
					},
					"response": []
				},
				{
					"name": "Add/remove resources of a role",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"add\": [\n        \"user:invite\"\n    ],\n    \"del\": [\n        \"user:create\",\n        \"user:delete\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/role/:tenant/:role",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"role",
								":tenant",
								":role"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "MyTenant"
								},
								{
									"key": "role",
									"value": "Editor"
								}
							]
						},
						"description": "*Requires `authz:tenant:admin` access*"
					},
					"response": []
				},
				{
					"name": "Get roles of a credentials",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/roles/:tenant/:credentials_id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"roles",
								":tenant",
								":credentials_id"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "MyTenant"
								},
								{
									"key": "credentials_id",
									"type": "string",
									"value": "mongodb:default:abc123def456ghi789"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign roles to a credentials",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"roles\": [\n        \"MyTenant/role\",\n        \"*/admin\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/roles/:tenant/:credentials_id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"roles",
								":tenant",
								":credentials_id"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "MyTenant"
								},
								{
									"key": "credentials_id",
									"type": "string",
									"value": "mongodb:default:abc123def456ghi789"
								}
							]
						},
						"description": "*Requires `authz:tenant:admin` access*\n\n*Assigning global roles requires `authz:superuser` access*"
					},
					"response": []
				}
			],
			"description": "Calls for managing roles and assigning them to users.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Resources",
			"item": [
				{
					"name": "List resources",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/resource",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"resource"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get resource detail",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/resource/:resource_id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"resource",
								":resource_id"
							],
							"variable": [
								{
									"key": "resource_id",
									"value": "user:create"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create resource",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/resource/:resource_id",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"resource",
								":resource_id"
							],
							"variable": [
								{
									"key": "resource_id",
									"value": "user:create"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/public/login/:lsid",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"public",
								"login",
								":lsid"
							],
							"variable": [
								{
									"key": "lsid",
									"value": "abc123def456ghi789"
								}
							]
						},
						"description": "Request body is encrypted."
					},
					"response": []
				},
				{
					"name": "Login prologue",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/public/login.prologue",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"public",
								"login.prologue"
							]
						},
						"description": "Request body is encrypted."
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/public/logout",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"public",
								"logout"
							]
						},
						"description": "Logout endpoint for **cookie-based** sessions.\n\nFor OAuth token-based session logout, refer to `GET /openidconnect/logout`."
					},
					"response": []
				},
				{
					"name": "External login (callback)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/public/ext-login/:ext_login_provider",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"public",
								"ext-login",
								":ext_login_provider"
							],
							"query": [
								{
									"key": "code",
									"value": null,
									"description": "Token request code",
									"disabled": true
								},
								{
									"key": "state",
									"value": null,
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ext_login_provider",
									"value": "google"
								}
							]
						},
						"description": "Callback after successful login with an external OAuth2 provider."
					},
					"response": []
				},
				{
					"name": "Add external login (callback)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/public/ext-login-add/:ext_login_provider",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"public",
								"ext-login-add",
								":ext_login_provider"
							],
							"query": [
								{
									"key": "code",
									"value": null,
									"description": "Token request code",
									"disabled": true
								},
								{
									"key": "state",
									"value": null,
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "ext_login_provider",
									"value": "google"
								}
							]
						},
						"description": "Callback after successful login with an external OAuth2 provider."
					},
					"response": []
				},
				{
					"name": "Remove external login",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/public/ext-login-delete/:ext_login_provider",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"public",
								"ext-login-delete",
								":ext_login_provider"
							],
							"variable": [
								{
									"key": "ext_login_provider",
									"value": "google"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Cookie",
			"item": [
				{
					"name": "Validate cookie",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/cookie/nginx",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"cookie",
								"nginx"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "RBAC",
			"item": [
				{
					"name": "Verify tenant resource access",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/rbac/:tenant/:resources",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"rbac",
								":tenant",
								":resources"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "my-tenant"
								},
								{
									"key": "resources",
									"value": "authz:tenant:admin"
								}
							]
						},
						"description": "Check access to a resource under a tenant"
					},
					"response": []
				},
				{
					"name": "Verify tenant access",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/rbac/:tenant/:resources",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"rbac",
								":tenant",
								":resources"
							],
							"variable": [
								{
									"key": "tenant",
									"value": "my-tenant"
								},
								{
									"key": "resources",
									"value": "tenant:access"
								}
							]
						},
						"description": "Tenant access is checked using a dedicated resource `tenant:access`"
					},
					"response": []
				},
				{
					"name": "Verify resource access",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/rbac/:resources",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"rbac",
								":resources"
							],
							"variable": [
								{
									"key": "resources",
									"value": "user:create"
								}
							]
						},
						"description": "Check access to a global resource"
					},
					"response": []
				}
			]
		},
		{
			"name": "Public",
			"item": [
				{
					"name": "Features",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/public/features",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"public",
								"features"
							]
						},
						"description": "Get features available at Seacat Auth webUI."
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "authUrl",
				"value": "{{AUTH_URL}}/openidconnect/authorize",
				"type": "string"
			},
			{
				"key": "clientId",
				"value": "",
				"type": "string"
			},
			{
				"key": "useBrowser",
				"value": false,
				"type": "boolean"
			},
			{
				"key": "accessTokenUrl",
				"value": "{{AUTH_URL}}/openidconnect/token",
				"type": "string"
			},
			{
				"key": "grant_type",
				"value": "authorization_code",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			},
			{
				"key": "tokenName",
				"value": "SeacatToken",
				"type": "string"
			},
			{
				"key": "challengeAlgorithm",
				"value": "S256",
				"type": "string"
			},
			{
				"key": "scope",
				"value": "openid",
				"type": "string"
			},
			{
				"key": "redirect_uri",
				"value": "{{BASE_URL}}/openidconnect/userinfo",
				"type": "string"
			},
			{
				"key": "client_authentication",
				"value": "body",
				"type": "string"
			},
			{
				"key": "tokenType",
				"value": "Bearer",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}